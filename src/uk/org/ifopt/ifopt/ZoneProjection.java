//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.11.14 at 03:28:36 PM PST 
//

package uk.org.ifopt.ifopt;

import java.util.ArrayList;
import java.util.List;

public class ZoneProjection extends AbstractProjection {

	
	protected List<ZoneProjection.Boundary> boundary;

	/**
	 * Gets the value of the boundary property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the boundary property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getBoundary().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link ZoneProjection.Boundary }
	 * 
	 * 
	 */
	public List<ZoneProjection.Boundary> getBoundary() {
		if (boundary == null) {
			boundary = new ArrayList<ZoneProjection.Boundary>();
		}
		return this.boundary;
	}

	
	public static class Boundary {

	
		protected List<PointProjection> pointProjection;

		/**
		 * Gets the value of the pointProjection property.
		 * 
		 * <p>
		 * This accessor method returns a reference to the live list, not a
		 * snapshot. Therefore any modification you make to the returned list
		 * will be present inside the JAXB object. This is why there is not a
		 * <CODE>set</CODE> method for the pointProjection property.
		 * 
		 * <p>
		 * For example, to add a new item, do as follows:
		 * 
		 * <pre>
		 * getPointProjection().add(newItem);
		 * </pre>
		 * 
		 * 
		 * <p>
		 * Objects of the following type(s) are allowed in the list
		 * {@link PointProjection }
		 * 
		 * 
		 */
		public List<PointProjection> getPointProjection() {
			if (pointProjection == null) {
				pointProjection = new ArrayList<PointProjection>();
			}
			return this.pointProjection;
		}

	}

}
