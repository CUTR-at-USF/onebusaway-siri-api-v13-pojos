//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.11.14 at 03:28:36 PM PST 
//


package uk.org.siri.siri;

public enum ServiceConditionEnumeration {

    
    PTI_13_0("pti13_0"),

    /**
     * TPEG Pti13_unknown
     * 
     */
    
    UNKNOWN("unknown"),
    
    PTI_13_1("pti13_1"),

    /**
     * TPEG Pti13_altered 
     * 
     */
    
    ALTERED("altered"),
    
    PTI_13_2("pti13_2"),

    /**
     * TPEG Pti13_cancelled   
     * 
     */
    
    CANCELLED("cancelled"),
    
    PTI_13_3("pti13_3"),

    /**
     * TPEG Pti13_delayed 
     * 
     */
    
    DELAYED("delayed"),
    
    PTI_13_4("pti13_4"),

    /**
     * TPEG Pti13_diverted    
     * 
     */
    
    DIVERTED("diverted"),
    
    PTI_13_5("pti13_5"),

    /**
     * TPEG Pti13_no service  
     * 
     */
    
    NO_SERVICE("noService"),
    
    PTI_13_6("pti13_6"),

    /**
     * TPEG Pti13_disrupted   
     * 
     */
    
    DISRUPTED("disrupted"),
    
    PTI_13_7("pti13_7"),

    /**
     * TPEG Pti13_additional service  
     * 
     */
    
    ADDITIONAL_SERVICE("additionalService"),
    
    PTI_13_8("pti13_8"),

    /**
     * TPEG Pti13_special service 
     * 
     */
    
    SPECIAL_SERVICE("specialService"),
    
    PTI_13_9("pti13_9"),

    /**
     * TPEG Pti13_on time 
     * 
     */
    
    ON_TIME("onTime"),
    
    PTI_13_10("pti13_10"),

    /**
     * TPEG Pti13_normal service  
     * 
     */
    
    NORMAL_SERVICE("normalService"),
    
    PTI_13_11("pti13_11"),

    /**
     * TPEG Pti13_intermittent service    
     * 
     */
    
    INTERMITTENT_SERVICE("intermittentService"),
    
    PTI_13_12("pti13_12"),

    /**
     * TPEG Pti13_short formed service    
     * 
     */
    
    SHORT_FORMED_SERVICE("shortFormedService"),
    
    PTI_13_13("pti13_13"),

    /**
     * TPEG Pti13_full length service 
     * 
     */
    
    FULL_LENGTH_SERVICE("fullLengthService"),
    
    PTI_13_14("pti13_14"),

    /**
     * TPEG Pti13_extended service    
     * 
     */
    
    EXTENDED_SERVICE("extendedService"),
    
    PTI_13_15("pti13_15"),

    /**
     * TPEG Pti13_splitting train 
     * 
     */
    
    SPLITTING_TRAIN("splittingTrain"),
    
    PTI_13_16("pti13_16"),

    /**
     * TPEG Pti13_replacement transport   
     * 
     */
    
    REPLACEMENT_TRANSPORT("replacementTransport"),
    
    PTI_13_17("pti13_17"),

    /**
     * TPEG Pti13_arrives early   
     * 
     */
    
    ARRIVES_EARLY("arrivesEarly"),
    
    PTI_13_18("pti13_18"),

    /**
     * TPEG Pti13_shuttle service 
     * 
     */
    
    SHUTTLE_SERVICE("shuttleService"),
    
    PTI_13_19("pti13_19"),

    /**
     * TPEG Pti13_replacement service 
     * 
     */
    
    REPLACEMENT_SERVICE("replacementService"),
    
    PTI_13_255("pti13_255"),

    /**
     * TPEG Pti13_Undefined service information
     * 
     */
    
    UNDEFINED_SERVICE_INFORMATION("undefinedServiceInformation");
    private final String value;

    ServiceConditionEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ServiceConditionEnumeration fromValue(String v) {
        for (ServiceConditionEnumeration c: ServiceConditionEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
